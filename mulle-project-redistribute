#! /usr/bin/env mulle-bash
# shellcheck shell=bash
#
#   Copyright (c) 2017 Nat! - Mulle kybernetiK
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are met:
#
#   Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
#   Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
#   Neither the name of Mulle kybernetiK nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.
#
[ "${TRACE}" = 'YES' -o "${MULLE_PROJECT_REDISTRIBUTE_TRACE}" = 'YES' ] && set -x && : "$0" "$@"


MULLE_EXECUTABLE_VERSION="0.0.0"

if [ -z "${MULLE_PROJECT_LIBEXEC_DIR}" ]
then
   r_get_libexec_dir "${MULLE_EXECUTABLE}" "mulle-project" "mulle-project-git.sh"
   MULLE_PROJECT_LIBEXEC_DIR="${RVAL}"
fi


usage()
{
   [ "$#" -ne 0 ] && log_error "$1"

   cat <<EOF >&2
Usage:
   ${MULLE_USAGE_NAME} [flags] <message>

   A lazy way to push smallish commits out without changing the version
   number. Use mulle-project-sloppy-distribute if you want to change the
   version.

Flags:
   --if-uncommitted-files : skip if there are no added, deleted, modified files
   --prerelease           : prerelease instead of distribute
EOF
   exit 1
}


source_file()
{
   log_verbose "Read \"$1\"" >&2
   . "$@"
}


main()
{
   local OPTION_PRERELEASE='NO'
   local OPTION_IF_UNCOMMITTED_FILES

   while [ $# -ne 0 ]
   do
      if options_technical_flags "$1"
      then
         shift
         continue
      fi

      case "$1" in
         -h|--help|help)
            usage
         ;;

         --if-uncommitted-files)
            OPTION_IF_UNCOMMITTED_FILES='YES'
         ;;

         --prerelease)
            OPTION_PRERELEASE='YES'
         ;;

         -*)
            usage "Unknown option \"$1\""
         ;;

         *)
            break
         ;;
      esac
      shift
   done

   options_setup_trace "${MULLE_TRACE}" && set -x

   source_file "${MULLE_PROJECT_LIBEXEC_DIR}/mulle-project-git.sh" "$@"            || exit 1

   local dogit='NO'

   if ! project::git::is_clean
   then
      if [ $# -eq 0 ]
      then
         log_error "Need a commit message for the outstanding commits"
         git status -s
         exit 1
      fi
      dogit='YES'
   else
      if [ "${OPTION_IF_UNCOMMITTED_FILES}" = 'YES' ]
      then
         log_verbose "Nothing to do"
         return 0
      fi
   fi

   project::git::assert_not_on_release_branch


   local version
   local tag

   version="`mulle-project-version`" || exit 1
   if [ "${OPTION_PRERELEASE}" = 'YES' ]
   then
      tag="${version}-prerelease"
   fi

   rexekutor mulle-project-untag ${MULLE_TECHNICAL_FLAGS} "${tag:-${version}}" || exit 1

   if [ "${dogit}" = 'YES' ]
   then
      (
         log_info "Add modified files and commit changes"
         exekutor git add -u &&
         exekutor git commit -m "$*"
      ) || exit 1
   fi

   if [ "${OPTION_PRERELEASE}" = 'YES' ]
   then
      rexekutor mulle-project-prerelease ${MULLE_TECHNICAL_FLAGS}
   else
      rexekutor mulle-project-distribute ${MULLE_TECHNICAL_FLAGS}
   fi
}


main "$@"


