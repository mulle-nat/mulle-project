#! /usr/bin/env mulle-bash
#! MULLE_BASHFUNCTIONS_VERSION=<|MULLE_BASHFUNCTIONS_VERSION|>
# shellcheck shell=bash
#


[ "${TRACE}" = 'YES' -o "${MULLE_SHASUM_URL_TRACE}" = 'YES' ] \
&& set -x  \
&& : "$0" "$@"

#
# Versioning of this script
#
MULLE_EXECUTABLE_VERSION="0.0.0"


shasum_url::print_flags()
{
   echo "   -f    : force operation"

   ##
   ## ADD YOUR FLAGS DESCRIPTIONS HERE
   ##

   options_technical_flags_usage \
           "      : "
}


shasum_url::usage()
{
   [ $# -ne 0 ] && log_error "$*"


   cat <<EOF >&2
Usage:
   mulle-shasum-url [flags] <url>

   Download URL and run shasum over it. Then delete it again.
   Useful for homebrew formulas.

Flags:
EOF
   shasum_url::print_flags | LC_ALL=C sort >&2

   exit 1
}


shasum_url::main()
{
   #
   # simple option/flag handling
   #
   local OPTION_VALUE
   local OPTION_ALGORITHM=256

   while [ $# -ne 0 ]
   do
      if options_technical_flags "$1"
      then
         shift
         continue
      fi

      case "$1" in
         -f|--force)
            MULLE_FLAG_MAGNUM_FORCE='YES'
         ;;

         -h*|--help|help)
            shasum_url::usage
         ;;

         -[0-9]*)
            OPTION_ALGORITHM="${1#-}"
         ;;

         --value)
            [ $# -eq 1 ] && match_list_usage "missing argument to $1"
            shift

            OPTION_VALUE="$1"
         ;;

         --version)
            printf "%s\n" "${MULLE_EXECUTABLE_VERSION}"
            exit 0
         ;;


         ##
         ## ADD YOUR FLAGS HERE
         ##

         -*)
            shasum_url::usage "Unknown flag \"$1\""
         ;;

         *)
            break
         ;;
      esac

      shift
   done

   options_setup_trace "${MULLE_TRACE}" && set -x


   local tmpdir
   local curlflags

   curlflags="-s"
   if [ "${MULLE_FLAG_LOG_VERBOSE}" = 'YES' ]
   then
      curlflags=""
   fi
   if [ "${MULLE_FLAG_LOG_FLUFF}" = 'YES' ]
   then
      curlflags="-v"
   fi

   r_make_tmp_directory
   tmpdir="${RVAL}"
   (
      exekutor cd "$tmpdir"    || exit 1
      exekutor curl ${curlflags} -L -O "$@" || exit 1

      r_basename "${!#}"  # last argument in bash
      exekutor shasum -b -a "${OPTION_ALGORITHM}" "${RVAL}"
   ) || exit 1

   rmdir_safer "${tmpdir}"
}

#
# You can also use the function `call_with_flags`, which has been defined
# during mulle-boot. It lets you call 'shasum_url::main'
# with MULLE_SHASUM_URL_FLAGS interposed.
#
# call_with_flags "shasum_url::main" "${MULLE_SHASUM_URL_FLAGS}" "$@"

shasum_url::main "$@"
